<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[[食谱]白灼虾+玉米汁]]></title>
    <url>%2F2017%2F05%2F12%2F%E9%A3%9F%E8%B0%B1-%E7%99%BD%E7%81%BC%E8%99%BE-%E7%8E%89%E7%B1%B3%E6%B1%81%2F</url>
    <content type="text"><![CDATA[前言今天是2017年的5月12日，今晚的月亮很美，美得想摘下来，想到那句“此时相望不相闻，愿逐月华流照君”，你可安好，祝你愉快。今日特别想吃虾，下午一下课就跑去附近的村子买虾回宿舍煮了，我觉得，自己做的，真的很好吃哈哈哈。顺便就买了玉米做玉米汁嘻嘻。记一下做的流程吧！ 正文白灼虾 白灼，顾名思义就是放到沸水里烫熟然后捞起来，就可以吃了！ 食材：虾，盐，姜，葱，酱油食材准备（15min）： 将虾去头去须，去脚，然后去掉虾腹部里面的黑丝，应该是虾的肠之类的东西。如果不想那么麻烦的话，也可以去须就好。 姜切片，作用是去腥，一点点姜片再切碎，待会放入到酱料中。 葱切成葱花状，作为蘸酱料的调味品。正式步骤： 做蘸酱料，将酱油和姜片放到洗净的锅中，加热煮沸 待酱油煮沸之后，放入葱花，再煮一下，差不多就用一个小碗盛起来（整个过程注意不要把酱油烧干），酱料就算完成了！很简单的呢（3min） 把锅洗净，加水，放姜片，加热煮沸（3min） 沸了之后将处理好的虾放到沸水中，可以加一点盐，同时起到去腥的作用 煮了大概三分钟之后就可以关掉，将虾捞起来，盛饭，蘸上点酱料，开始吃嘻嘻。 ps：酱料用来拌饭也很好吃哦！这道菜做起来又简单，算上食材准备也就30分钟左右。吃虾的时候，慢慢把虾拨出来，轻轻蘸点酱，轻启X唇，再轻轻咬下去，慢慢感受虾的香味还有肉感，吃上一口拌上酱油的饭，真是开心哈哈哈。 玉米汁玉米汁是之前在朋友家喝到的，那个味道一直一直记到现在，之前自己做过一次，今天又做了，好想成为了一种记忆了？？食材： 玉米（2根）、冰糖食材准备： 拨出玉米粒，一个很方便的方法，就是先将玉米对半再对半切成四块，可以叫市场大叔阿姨帮忙，然后对着空的一边将玉米粒拨出来（原谅我没配图，自己脑补哈哈哈）正式步骤： 将玉米粒放到榨汁机，加水大概没过玉米，然后榨碎 榨的过程加入冰糖，根据个人口味加，也可以待会煮玉米的时候再加冰糖 榨完之后，就放到洗净的锅里面，不用再加水了，可以用勺子把表面的沫沫给舀掉，开锅加热 等到闻到玉米煮沸的香味就可以吃了。 ps： 因为第一次喝的时候，玉米汁里面是有玉米的碎碎的，所以我做的时候也就没有过滤了，那些碎碎喝起来还可以增加口感，建议不要过滤，当然因个人口味不同。煮的时候，可以用筷子或勺子顺时针旋转搅拌，防止底部烧焦，我自己两次都有点焦了，不过那不影响口感。整个过程加上拨玉米粒，大概花了15min，蛮简单的又超好喝。]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>食谱</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo搭建个人博客]]></title>
    <url>%2F2017%2F05%2F12%2FHexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"><![CDATA[前言终于把博客给搭建起来了，使用了Hexo + Git，确实确实很是方便。写下这篇文章，也是想记录一下自己搭建过程，同时防止以后忘记了可以查看一番： Hexo初始化 新建文章 静态文件生成+部署 Hexo主题配置（我用的是NexT） Hexo初始化Hexo使用前提，Git+Node.js！如果电脑没有的话，就需要安装好才能初始化Hexo哦。详细的话，可以参考Hexo官方文档。 安装Hexo打开控制台，使用npm安装Hexo1npm install -g hexo-cli -g–全局安装 安装完成后，在控制台输入hexo查看是否安装成功。1hexo 初始化先进入要放置博客文件夹的文件夹或者硬盘中，在控制台输入123hexo init &lt;folder&gt; //初始化博客文件夹，folder为文件夹名称cd &lt;folder&gt; //进入博客文件夹npm install //文件夹中已有package.json,使用npm安装依赖包 我们看一下博客文件夹的目录情况：12345678.├── _config.yml //网站的配置信息├── package.json //包含所有安装的各种模块├── scaffolds //模板文件夹，新建文章时，会根据模板来建立文件├── source //资源文件夹 | └── _posts //创建文章会存在此处├── themes //主题，hexo默认主题是landscape└── node_modules //node模块文件夹 网站初体验在控制台启动服务器1hexo server 出现下图情况表明服务器启动成功在本地打开http://localhost:4000/查看建好的博客网页。（Hexo默认端口为4000）如果要更改端口，在控制台输入1hexo server -p 5000 配置个人信息打开_config.yml，这个网站的配置信息 网站信息 1234567# Sitetitle: 林小胖的暖心小屋 //网站主标题subtitle: MCM_xp&apos;s blog //副标题description: 兴趣使然的小胖子 //个人描述，有助于SEOauthor: Lin JianHuang //你的名字language: zh-Hans //网站使用语言，不同主题下语言可能不同timezone: //时区，默认使用你的电脑的时区，我应该不会去哪里，就默认好了 个人域名 12345# URLurl: http://mcmPan.github.io //你的域名，这个要自己配置root: / //默认就好permalink: :year/:month/:day/:title/permalink_defaults: ps：如果网站存放在子目录中，例如 http://yoursite.com/blog，则请将您的 url 设为 http://yoursite.com/blog 并把 root 设为 /blog/。 新建文章在控制台输入如下新建文章1hexo new [layout] &lt;title&gt; 新建文章是以markdown的格式存储在source的_post中。layout默认是post，另有两种布局，page和draft。布局 | 路径—|—post | source/_postspage | sourcedraft| source/_drafts1hexo new page tags //在source中新建tags文件夹，里面有index.md。 发布草稿，将草稿从_draft中移到_post中，而后可以通过server进行发布。因为_draft文件夹默认会在发布的时候忽略掉。1hexo publish [layout] &lt;title&gt; 静态文件生成+部署当编辑好文章之后，使用Hexo生成静态文件。在控制台输出1hexo generate 使用Git部署 先要进行Git部署，安装hexo-deployer-git 1npm install hexo-deployer-git --save 在_config.yml文件中，修改参数 12345deploy: type: git //部署类型 repo: git@github.com:mcmPan/mcmPan.github.io.git //repository库地址 branch: master //分支名称 ps：1.注意Git仓库名称一定要跟你的Github账号名一致。比如Github账号名为132812,则仓库名需要是 132812.github.io。因为最终Hexo博客是放到GitHub上托管的。Github Page是Github提供的静态网站托管服务，可以用来放置我们的项目。 部署命令1hexo deploy 该条指令可以将网站部署到服务器上面。1234hexo generatehexo deploy--&gt;简写hexo g -d 部署完成之后，就可以登陆你的域名（youname.github.io）看到博客了。 部署出现问题在进行hexo g的时候遇到了一个问题，出现1Error:spawn git ENOENt 原因是Git环境变量没有设置导致的，所以对电脑环境变量进行配置就可以解决了。右键我的电脑-&gt;属性-&gt;更改设置-&gt;高级-&gt;环境变量-&gt;在系统变量或者个人用户变量中，找到变量Path-&gt;编辑，新增Git环境变量。12环境变量：C:\Program Files (x86)\Git\bin;C:\Program Files (x86)\Git\libexec\git-core//Git的安装目录 主题配置在Hexo官方网站有很多主题展示，可以选择自己喜欢的，找到其在Github上的地址，在本地博客根目录中，将其克隆下来即可。12cd your-hexo-filegit clone themes.website themes/themesname 另一种方法就是直接将主题文件整份拷贝下来放入到themes目录下。 启用主题在_config.yml中，找到theme字段，将其更改为你要使用的主题名字1theme themename 这样就可以使用了，然后自己可以参照主题的文档进行优化，将主题风格化嘻嘻。 总结我自己是使用了NexT主题的，然后参照官方文档一步一步进行配置，扩展了用户统计和阅读统计，加了腾讯404公益页面，将整个页面换成自己喜欢的暗色系（参照blog.idhyt.com的颜色自己配置的）。比较遗憾的是，还没有增加评论功能，多说快要停了，disqus被墙官网这段时间登不上去，网易云跟帖需要自己申请一个域名，想过段时间再弄，如果有想联系我的，应该也没有哈哈哈找我邮箱嘻嘻。 感谢 感谢Hexo官方 感谢NexT官方 感谢idhyt 感谢七牛 感谢Git 感谢看到的搭建流程文章]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[JavaScript数组去重]]></title>
    <url>%2F2017%2F05%2F11%2FJavaScript%E6%95%B0%E7%BB%84%E5%8E%BB%E9%87%8D%2F</url>
    <content type="text"><![CDATA[前提在做前端笔试的时候，经常会看到要写数组去重的函数，在网上查询了一番之后，总结了下面五种去重的方法。 正文方法1创建新数组，查找在新数组是否已有项，没有则将其推进新数组里面。123456789101112131415function unique(arr) &#123; var res = []; for(var i = 0, len = arr.length; i &lt; len; i++) &#123; for(var j = 0, jlen = res.length; j &lt; jlen; j++) &#123; if(res[j] === arr[i]) break; &#125; //遍历一遍新数组之后，若j等于新数组的长度，则说明没有重复项 if(j == jlen) &#123; res.push(arr[i]); &#125; &#125; return res;&#125; 方法2使用filter过滤数组，如果查找到的数组项的下标不等于当前数组项的下标，则说明该数组项前面已有一样的项了，返回false，过滤该项。相比较于方法1，方法2只需要遍历一次数组，时间复杂度低。12345678function unique(a) &#123; var res = a.filter(function(item, index, array) &#123; return array.indexOf(item) === index; &#125;) return res; &#125; 方法3该方法跟方法1差不多，只是将数组重复的最后一项留下来，而不是第一项。12345678910111213function unique(a) &#123; var res = []; for(var i = 0, len = a.length; i &lt; len; i++) &#123; for(var j = i + 1; j &lt; len; j++) &#123; if(a[j] === a[i]) j = ++i; //如果找到了相同的元素，i自加，进入下一个循环，同时i赋值给j。 &#125; res.push(a[i]); &#125; return res;&#125; 方法4该方法先将数组排序，然后过滤，依次查看是否跟第一项一致，一致的话则返回false，过滤掉该数组项。12345678910function unique(arr) &#123; return arr.sort().filter(function(item, index, array) &#123; return !index || array[index-1] !== item; &#125;)&#125; 方法5嘻嘻该方法使用多了一个空对象。将数组项+自身的类型（字符串）做为对象的属性存储起来，然后赋值为1，如果查找到对象中有该属性，则有重复，不将其放入到新数组中。否则，则放入到新数组中。123456789101112131415161718function unique(arr) &#123; var obj = &#123;&#125;, res = []; for(var i = 0, len = arr.length; i &lt; len; i++) &#123; var item = arr[i]; var key = typeof(item) + item; if(obj[key] !== 1) &#123; res.push(item); obj[key] = 1; &#125; &#125; return res;&#125;]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[firstTime]]></title>
    <url>%2F2017%2F05%2F04%2FfirstTime%2F</url>
    <content type="text"><![CDATA[您好，这是林小胖的暖心小屋]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>HelloWorld</tag>
      </tags>
  </entry>
</search>