<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[JavaScript数组去重]]></title>
    <url>%2F2017%2F05%2F11%2FJavaScript%E6%95%B0%E7%BB%84%E5%8E%BB%E9%87%8D%2F</url>
    <content type="text"><![CDATA[前提在做前端笔试的时候，经常会看到要写数组去重的函数，在万能的网上查询了一番之后，总结了下面五种去重的方法。 正文方法1创建新数组，查找在新数组是否已有项，没有则将其推进新数组里面。123456789101112131415function unique(arr) &#123; var res = []; for(var i = 0, len = arr.length; i &lt; len; i++) &#123; for(var j = 0, jlen = res.length; j &lt; jlen; j++) &#123; if(res[j] === arr[i]) break; &#125; //遍历一遍新数组之后，若j等于新数组的长度，则说明没有重复项 if(j == jlen) &#123; res.push(arr[i]); &#125; &#125; return res;&#125; 方法2使用filter过滤数组，如果查找到的数组项的下标不等于当前数组项的下标，则说明该数组项前面已有一样的项了，返回false，过滤该项。相比较于方法1，方法2只需要遍历一次数组，时间复杂度低。12345678function unique(a) &#123; var res = a.filter(function(item, index, array) &#123; return array.indexOf(item) === index; &#125;) return res; &#125; 方法3该方法跟方法1差不多，只是将数组重复的最后一项留下来，而不是第一项。12345678910111213function unique(a) &#123; var res = []; for(var i = 0, len = a.length; i &lt; len; i++) &#123; for(var j = i + 1; j &lt; len; j++) &#123; if(a[j] === a[i]) j = ++i; //如果找到了相同的元素，i自加，进入下一个循环，同时i赋值给j。 &#125; res.push(a[i]); &#125; return res;&#125; 方法4该方法先将数组排序，然后过滤，依次查看是否跟第一项一致，一致的话则返回false，过滤掉该数组项。12345678910function unique(arr) &#123; return arr.sort().filter(function(item, index, array) &#123; return !index || array[index-1] !== item; &#125;)&#125; 方法5嘻嘻该方法使用多了一个空对象。将数组项+自身的类型（字符串）做为对象的属性存储起来，然后赋值为1，如果查找到对象中有该属性，则有重复，不将其放入到新数组中。否则，则放入到新数组中。123456789101112131415161718function unique(arr) &#123; var obj = &#123;&#125;, res = []; for(var i = 0, len = arr.length; i &lt; len; i++) &#123; var item = arr[i]; var key = typeof(item) + item; if(obj[key] !== 1) &#123; res.push(item); obj[key] = 1; &#125; &#125; return res;&#125;]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>JavaScript 算法</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[firstTime]]></title>
    <url>%2F2017%2F05%2F04%2FfirstTime%2F</url>
    <content type="text"><![CDATA[您好，这是林小胖的暖心小屋]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>HelloWorld</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2017%2F05%2F04%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>